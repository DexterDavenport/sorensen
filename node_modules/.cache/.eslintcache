[{"/Users/dexterdavenport/Desktop/integrity-well-drilling/src/index.tsx":"1","/Users/dexterdavenport/Desktop/integrity-well-drilling/src/App.tsx":"2","/Users/dexterdavenport/Desktop/integrity-well-drilling/src/components/Navbar.tsx":"3","/Users/dexterdavenport/Desktop/integrity-well-drilling/src/components/Footer.tsx":"4","/Users/dexterdavenport/Desktop/integrity-well-drilling/src/pages/HomePage.tsx":"5","/Users/dexterdavenport/Desktop/integrity-well-drilling/src/components/context/DarkMode.tsx":"6","/Users/dexterdavenport/Desktop/integrity-well-drilling/src/components/home/Header.tsx":"7","/Users/dexterdavenport/Desktop/integrity-well-drilling/src/components/home/Services.tsx":"8","/Users/dexterdavenport/Desktop/integrity-well-drilling/src/components/home/About.tsx":"9","/Users/dexterdavenport/Desktop/integrity-well-drilling/src/components/home/Title.tsx":"10"},{"size":429,"mtime":1677287981759,"results":"11","hashOfConfig":"12"},{"size":2442,"mtime":1677299893338,"results":"13","hashOfConfig":"12"},{"size":8913,"mtime":1677333861288,"results":"14","hashOfConfig":"12"},{"size":894,"mtime":1677284609314,"results":"15","hashOfConfig":"12"},{"size":1563,"mtime":1677299623050,"results":"16","hashOfConfig":"12"},{"size":263,"mtime":1677276683366,"results":"17","hashOfConfig":"12"},{"size":3682,"mtime":1677337941852,"results":"18","hashOfConfig":"12"},{"size":2311,"mtime":1677296977461,"results":"19","hashOfConfig":"12"},{"size":3125,"mtime":1677299341448,"results":"20","hashOfConfig":"12"},{"size":743,"mtime":1677276683368,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"1al885t",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"/Users/dexterdavenport/Desktop/integrity-well-drilling/src/index.tsx",[],[],[],"/Users/dexterdavenport/Desktop/integrity-well-drilling/src/App.tsx",[],[],"/Users/dexterdavenport/Desktop/integrity-well-drilling/src/components/Navbar.tsx",["54","55"],[],"import React from 'react';\n\nimport Container from '@mui/material/Container';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Divider from '@mui/material/Divider';\nimport AppBar from '@mui/material/AppBar';\nimport Typography from '@mui/material/Typography';\nimport Popover from '@mui/material/Popover';\nimport { styled } from '@mui/material/styles';\n\nimport IconButton from '@mui/material/IconButton';\nimport PhoneIcon from '@mui/icons-material/Phone';\nimport EmailIcon from '@mui/icons-material/Email';\nimport MapIcon from '@mui/icons-material/Map';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport KeyboardArrowRightIcon from '@mui/icons-material/KeyboardArrowRight';\nimport MoneyOffIcon from '@mui/icons-material/MoneyOff';\nimport HandymanIcon from '@mui/icons-material/Handyman';\nimport InfoIcon from '@mui/icons-material/Info';\n\nimport Drawer from '@mui/material/Drawer';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport { Link } from \"react-router-dom\";\n\n\nconst DRAWER_WIDTH: number = 240;\n\nfunction ContactUs(): JSX.Element {\n    return (\n        <Container sx={{ marginY: 3 }}>\n            <Stack minWidth=\"100%\" width={DRAWER_WIDTH} direction=\"row\" justifyContent=\"space-between\" my={2}>\n                <MoneyOffIcon />\n                <Typography variant=\"subtitle1\">480.495.2463</Typography>\n            </Stack>\n\n            <Stack width={DRAWER_WIDTH} direction=\"row\" justifyContent=\"space-between\" my={2}>\n                <EmailIcon />\n                <Typography variant=\"subtitle1\">integritywds@gmail.com</Typography>\n            </Stack>\n\n            <Stack width={DRAWER_WIDTH} direction=\"row\" justifyContent=\"space-between\" my={2}>\n                <InfoIcon />\n                <Typography variant=\"subtitle1\" textAlign=\"right\">Snowflake, Arizona 85937</Typography>\n            </Stack>\n        </Container>\n    );\n}\n\ntype NavButtonProps = {\n    color: string;\n    children: string;\n    link: string;\n    active?: boolean;\n};\n  \nclass TabButton extends React.Component<NavButtonProps> {\n    public render(): JSX.Element {\n      return (\n        <Button component={Link} to={this.props.link} key={this.props.children} sx={{\n          fontWeight: 500,\n          color: this.props.color,\n          position: 'relative',\n  \n          '&:before': {\n            content: \"''\",\n            position: 'absolute',\n            width: this.props.active ? '100%' : 0,\n            height: '2px',\n            bottom: 0,\n            backgroundColor: this.props.color,\n            visibility: this.props.active ? 'visible' : 'hidden',\n            transition: 'all 0.1s ease-in-out',\n          },\n  \n          '&:hover:before': {\n            visibility: 'visible',\n            width: '100%',\n          },\n        }}>\n          {this.props.children}\n        </Button>\n      );\n    }\n  }\n\ntype PopoverTabProps = {\n    backgroundColor: string;\n    color: string;\n    children: string;\n};\n\ntype PopoverTabState = {\n    anchorEl?: HTMLButtonElement;\n};\n\nclass PopoverTab extends React.Component<PopoverTabProps> {\n    public state: PopoverTabState = {\n        anchorEl: undefined,\n    };\n\n    constructor(props: PopoverTabProps) {\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    private handleClick(event: React.MouseEvent<HTMLButtonElement>): void {\n        this.setState({ anchorEl: event.currentTarget });\n      };\n\n    private handleClose(): void {\n        this.setState({ anchorEl: undefined });\n    }\n\n    public render(): JSX.Element {\n        const open: boolean = Boolean(this.state.anchorEl);\n        const id: string | undefined = open ? 'simple-popover' : undefined;\n\n        return (\n            <>\n                <Button aria-describedby={id} variant=\"contained\" onClick={this.handleClick} sx={{\n                    backgroundColor: this.props.backgroundColor,\n                    color: this.props.color,\n                }}>\n                    {this.props.children}\n                </Button>\n\n                <Popover id={id} open={open} anchorEl={this.state.anchorEl} onClose={this.handleClose} \n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                    }}\n                    anchorOrigin={{ \n                        vertical: 'bottom',\n                        horizontal: 'right',\n                    }}\n                >\n                    <ContactUs />\n                </Popover>\n            </>\n        );\n    }\n}\n\nexport type Tab = {\n    title: string;\n    link: string;\n};\n\ntype NavbarProps = {\n    tabs: Tab[];\n    transparent: boolean;\n};\n\ntype NavbarState = {\n    drawerOpen: boolean;\n};\n\nconst DrawerHeader = styled('div')(({ theme }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-start',\n}));\n\nexport class Navbar extends React.Component<NavbarProps> {\n    public state: NavbarState = { drawerOpen: false };\n\n    constructor(props: NavbarProps) {\n        super(props);\n        this.toggleDrawer = this.toggleDrawer.bind(this);\n    }\n\n    private toggleDrawer(): void {\n        this.setState({ drawerOpen: !this.state.drawerOpen });\n    }\n\n    public render(): JSX.Element {\n        const elevation: number = this.props.transparent ? 0 : 3;\n        const backgroundColor: 'primary' | 'transparent' = this.props.transparent ? 'transparent' : 'primary';\n        const textColor: string = 'white';\n        const containedBackgroundColor: string = this.props.transparent ? 'primary' : 'white';\n        const containedTextColor: string = this.props.transparent ? 'primary.contrastText' : '#086788';\n\n        return (\n            <>\n                <AppBar position=\"fixed\" color={backgroundColor} elevation={elevation} sx={{ paddingY: 2, transition: '0.1s' }}>\n                    <Container>\n                        <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n                            <Typography variant=\"h6\" color=\"white\">\n                                IWDS\n                            </Typography>\n\n                            <Stack direction=\"row\" spacing={3} sx={{ display: { xs: 'none', md: 'block' }}}>\n                                {\n                                    this.props.tabs.map((tab: Tab): JSX.Element => (\n                                        <TabButton link={tab.link} color={textColor}>{tab.title}</TabButton>\n                                    ))\n                                }\n                                \n                                <PopoverTab backgroundColor={containedBackgroundColor} color={containedTextColor}>\n                                    Contact Us\n                                </PopoverTab>\n                            </Stack>\n\n                            <Stack direction=\"row\" spacing={3} sx={{ display: { xs: 'block', md: 'none' }}}>\n                                <IconButton onClick={this.toggleDrawer}>\n                                    <MenuIcon sx={{ color: 'white' }} />\n                                </IconButton>\n                            </Stack>\n                        </Stack>\n                    </Container>\n                </AppBar>\n\n                <Drawer anchor=\"right\" open={this.state.drawerOpen} onClose={this.toggleDrawer} sx={{\n                    width: DRAWER_WIDTH,\n                    flexShrink: 0,\n                    '& .MuiDrawer-paper': {\n                        width: DRAWER_WIDTH,\n                        boxSizing: 'border-box',\n                    },\n                }}>\n                    <DrawerHeader>\n                        <IconButton onClick={this.toggleDrawer}>\n                            <KeyboardArrowRightIcon />\n                        </IconButton>\n                    </DrawerHeader>\n\n                    <Divider />\n\n                    <List disablePadding>\n                        {this.props.tabs.map((tab: Tab, index: number): JSX.Element => (\n                            <ListItem key={tab.title} disablePadding>\n                                <ListItemButton>\n                                    <ListItemIcon>\n                                        {index % 2 === 0 ? <MoneyOffIcon /> : <HandymanIcon />}\n                                    </ListItemIcon>\n                                    \n                                    <ListItemText primary={tab.title} />\n                                </ListItemButton>\n                            </ListItem>\n                        ))}\n                    </List>\n                </Drawer>\n            </>\n        );\n    }\n}","/Users/dexterdavenport/Desktop/integrity-well-drilling/src/components/Footer.tsx",[],[],"/Users/dexterdavenport/Desktop/integrity-well-drilling/src/pages/HomePage.tsx",[],[],"/Users/dexterdavenport/Desktop/integrity-well-drilling/src/components/context/DarkMode.tsx",[],[],"/Users/dexterdavenport/Desktop/integrity-well-drilling/src/components/home/Header.tsx",[],[],"/Users/dexterdavenport/Desktop/integrity-well-drilling/src/components/home/Services.tsx",[],[],"/Users/dexterdavenport/Desktop/integrity-well-drilling/src/components/home/About.tsx",[],[],"/Users/dexterdavenport/Desktop/integrity-well-drilling/src/components/home/Title.tsx",[],[],{"ruleId":"56","severity":1,"message":"57","line":13,"column":8,"nodeType":"58","messageId":"59","endLine":13,"endColumn":17},{"ruleId":"56","severity":1,"message":"60","line":15,"column":8,"nodeType":"58","messageId":"59","endLine":15,"endColumn":15},"@typescript-eslint/no-unused-vars","'PhoneIcon' is defined but never used.","Identifier","unusedVar","'MapIcon' is defined but never used."]