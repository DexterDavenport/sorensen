[{"/Users/dexterdavenport/Desktop/websites/sorensen/src/index.tsx":"1","/Users/dexterdavenport/Desktop/websites/sorensen/src/App.tsx":"2","/Users/dexterdavenport/Desktop/websites/sorensen/src/pages/HomePage.tsx":"3","/Users/dexterdavenport/Desktop/websites/sorensen/src/components/Navbar.tsx":"4","/Users/dexterdavenport/Desktop/websites/sorensen/src/components/Footer.tsx":"5","/Users/dexterdavenport/Desktop/websites/sorensen/src/components/home/Header.tsx":"6","/Users/dexterdavenport/Desktop/websites/sorensen/src/components/home/About.tsx":"7","/Users/dexterdavenport/Desktop/websites/sorensen/src/components/home/Title.tsx":"8","/Users/dexterdavenport/Desktop/websites/sorensen/src/components/home/Practices.tsx":"9","/Users/dexterdavenport/Desktop/websites/sorensen/src/components/context/DarkMode.tsx":"10"},{"size":429,"mtime":1677287981759,"results":"11","hashOfConfig":"12"},{"size":2281,"mtime":1682483355963,"results":"13","hashOfConfig":"12"},{"size":1573,"mtime":1682483291684,"results":"14","hashOfConfig":"12"},{"size":8991,"mtime":1682482090378,"results":"15","hashOfConfig":"12"},{"size":887,"mtime":1682483539516,"results":"16","hashOfConfig":"12"},{"size":3645,"mtime":1682483203038,"results":"17","hashOfConfig":"12"},{"size":3059,"mtime":1682482666884,"results":"18","hashOfConfig":"12"},{"size":743,"mtime":1677276683368,"results":"19","hashOfConfig":"12"},{"size":2362,"mtime":1682482996783,"results":"20","hashOfConfig":"12"},{"size":263,"mtime":1682483389711,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xbiuyr",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dexterdavenport/Desktop/websites/sorensen/src/index.tsx",[],[],"/Users/dexterdavenport/Desktop/websites/sorensen/src/App.tsx",["55"],[],"import React from \"react\";\n\nimport { Tab } from \"./components/Navbar\";\nimport HomePage from \"./pages/HomePage\";\n\nimport ThemeProvider from \"@mui/material/styles/ThemeProvider\";\nimport createTheme from \"@mui/material/styles/createTheme\";\n\nimport { BrowserRouter as Router, Routes, Route, Location, useLocation } from \"react-router-dom\";\n\n\n// https://m2.material.io/resources/color/#!/?view.left=0&view.right=1&primary.color=1b4972\nconst lightTheme = createTheme({\n  palette: {\n    primary: {\n      light: \"#B82201\",\n      main: \"#B82201\",\n      dark: \"#003c5a\",\n      contrastText: \"#fff\",\n    },\n    secondary: {\n      light: \"#B82201\",\n      main: \"#B82201\",\n      dark: \"#4b3833\",\n    },\n    background: {\n      default: \"#fff\",\n    },\n  },\n});\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: \"dark\",\n    secondary: {\n      main: \"#77625C\",\n    },\n  },\n});\n\n// #086788, #07A0C3, #C5C9A4, #8E6E53, #77625C\n\ntype ScrollWrapperProps = {\n  children: JSX.Element;\n};\n\n// Scroll to top after clicking link.\n// Scroll to anchor if one exists.\nfunction ScrollWrapper(props: ScrollWrapperProps): JSX.Element {\n  const location: Location = useLocation();\n\n  React.useLayoutEffect((): void => {\n    const anchor: string | undefined = location.hash.split('#').pop();\n    const target: HTMLElement | null = anchor ? document.getElementById(anchor) : null;\n\n    console.log(anchor, target);\n\n    if (window && target) {\n      const scrollTo: number = target.getBoundingClientRect().top + window.pageYOffset;\n      document.documentElement.scrollTo({top: scrollTo, behavior: 'smooth' });\n    }\n    else {\n      document.documentElement.scrollTo({ top: 0, behavior: 'auto' });\n    }\n  }, [location]);\n\n  return props.children;\n}\n\nconst TABS: Tab[] = [\n  { title: 'Free Estimate', link: '#header' },\n  { title: 'Practices', link: '#practices' },\n  { title: 'About', link: '#about' },\n];\n\nexport default function App(): JSX.Element {\n  const [darkMode, setDarkMode] = React.useState(false);\n\n  return (\n    <ThemeProvider theme={darkMode ? darkTheme : lightTheme}>\n        <Router>\n          <ScrollWrapper>\n            <Routes>\n              <Route index element={<HomePage tabs={TABS} />} />\n            </Routes>\n          </ScrollWrapper>\n        </Router>\n    </ThemeProvider>\n  );\n}\n","/Users/dexterdavenport/Desktop/websites/sorensen/src/pages/HomePage.tsx",["56","57","58"],[],"import React from \"react\";\n\nimport DarkModeContext from \"../components/context/DarkMode\";\n\nimport { Tab, Navbar } from \"../components/Navbar\";\nimport Header from '../components/home/Header';\nimport Services from \"../components/home/Practices\";\nimport About from \"../components/home/About\";\nimport Footer from \"../components/Footer\";\n\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Container from \"@mui/material/Container\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Switch from \"@mui/material/Switch\";\nimport useScrollTrigger from '@mui/material/useScrollTrigger';\n\n\ntype HomePageProps = {\n    tabs: Tab[];\n};\n\nexport default function HomePage(props: HomePageProps): JSX.Element {\n    const darkModeContext = React.useContext(DarkModeContext);\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        darkModeContext?.setDarkMode(event.target.checked);\n    };\n\n    const thresholdTrigger: boolean = useScrollTrigger({ \n        threshold: 80,\n        disableHysteresis: true,\n    });\n\n    return (\n        <>\n            <CssBaseline />\n            \n            <Navbar tabs={props.tabs} transparent={!thresholdTrigger} />\n    \n            <Header id=\"header\"/>\n\n            <Container maxWidth=\"lg\">\n                <Services id=\"practices\" />\n\n                <About id=\"about\" />\n    \n                {/* <FormControlLabel control={<Switch checked={darkModeContext?.darkMode} onChange={handleChange} />} label=\"Dark Mode\" /> */}\n            </Container>\n\n            <Footer />\n        </>\n    );\n}","/Users/dexterdavenport/Desktop/websites/sorensen/src/components/Navbar.tsx",["59","60","61","62"],[],"import React from 'react';\n\nimport Container from '@mui/material/Container';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport Divider from '@mui/material/Divider';\nimport AppBar from '@mui/material/AppBar';\nimport Typography from '@mui/material/Typography';\nimport Popover from '@mui/material/Popover';\nimport { styled } from '@mui/material/styles';\n\nimport IconButton from '@mui/material/IconButton';\nimport PhoneIcon from '@mui/icons-material/Phone';\nimport EmailIcon from '@mui/icons-material/Email';\nimport MapIcon from '@mui/icons-material/Map';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport KeyboardArrowRightIcon from '@mui/icons-material/KeyboardArrowRight';\nimport MoneyOffIcon from '@mui/icons-material/MoneyOff';\nimport HandymanIcon from '@mui/icons-material/Handyman';\nimport InfoIcon from '@mui/icons-material/Info';\n\nimport Drawer from '@mui/material/Drawer';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport { Link } from \"react-router-dom\";\n\n\nconst DRAWER_WIDTH: number = 240;\n\nfunction ContactUs(): JSX.Element {\n    return (\n        <Container sx={{ marginY: 3 }}>\n            <Stack minWidth=\"100%\" width={DRAWER_WIDTH} direction=\"row\" justifyContent=\"space-between\" my={2}>\n                {/* <MoneyOffIcon /> */}\n                <Typography variant=\"subtitle1\">801.687.1521</Typography>\n            </Stack>\n\n            <Stack width={DRAWER_WIDTH} direction=\"row\" justifyContent=\"space-between\" my={2}>\n                {/* <EmailIcon /> */}\n                <Typography variant=\"subtitle1\">sorensenlawassociates@gmail.com</Typography>\n            </Stack>\n\n            <Stack width={DRAWER_WIDTH} direction=\"row\" justifyContent=\"space-between\" my={2}>\n                {/* <InfoIcon /> */}\n                <Typography variant=\"subtitle1\" textAlign=\"right\">Sorensen Law & Associates\n3210 N Canyon Road, Suite 201\nProvo, Utah 84604</Typography>\n            </Stack>\n        </Container>\n    );\n}\n\ntype NavButtonProps = {\n    color: string;\n    children: string;\n    link: string;\n    active?: boolean;\n};\n  \nclass TabButton extends React.Component<NavButtonProps> {\n    public render(): JSX.Element {\n      return (\n        <Button component={Link} to={this.props.link} key={this.props.children} sx={{\n          fontWeight: 500,\n          color: this.props.color,\n          position: 'relative',\n  \n          '&:before': {\n            content: \"''\",\n            position: 'absolute',\n            width: this.props.active ? '100%' : 0,\n            height: '2px',\n            bottom: 0,\n            backgroundColor: this.props.color,\n            visibility: this.props.active ? 'visible' : 'hidden',\n            transition: 'all 0.1s ease-in-out',\n          },\n  \n          '&:hover:before': {\n            visibility: 'visible',\n            width: '100%',\n          },\n        }}>\n          {this.props.children}\n        </Button>\n      );\n    }\n  }\n\ntype PopoverTabProps = {\n    backgroundColor: string;\n    color: string;\n    children: string;\n};\n\ntype PopoverTabState = {\n    anchorEl?: HTMLButtonElement;\n};\n\nclass PopoverTab extends React.Component<PopoverTabProps> {\n    public state: PopoverTabState = {\n        anchorEl: undefined,\n    };\n\n    constructor(props: PopoverTabProps) {\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    private handleClick(event: React.MouseEvent<HTMLButtonElement>): void {\n        this.setState({ anchorEl: event.currentTarget });\n      };\n\n    private handleClose(): void {\n        this.setState({ anchorEl: undefined });\n    }\n\n    public render(): JSX.Element {\n        const open: boolean = Boolean(this.state.anchorEl);\n        const id: string | undefined = open ? 'simple-popover' : undefined;\n\n        return (\n            <>\n                <Button aria-describedby={id} variant=\"contained\" onClick={this.handleClick} sx={{\n                    backgroundColor: this.props.backgroundColor,\n                    color: this.props.color,\n                }}>\n                    {this.props.children}\n                </Button>\n\n                <Popover id={id} open={open} anchorEl={this.state.anchorEl} onClose={this.handleClose} \n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                    }}\n                    anchorOrigin={{ \n                        vertical: 'bottom',\n                        horizontal: 'right',\n                    }}\n                >\n                    <ContactUs />\n                </Popover>\n            </>\n        );\n    }\n}\n\nexport type Tab = {\n    title: string;\n    link: string;\n};\n\ntype NavbarProps = {\n    tabs: Tab[];\n    transparent: boolean;\n};\n\ntype NavbarState = {\n    drawerOpen: boolean;\n};\n\nconst DrawerHeader = styled('div')(({ theme }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-start',\n}));\n\nexport class Navbar extends React.Component<NavbarProps> {\n    public state: NavbarState = { drawerOpen: false };\n\n    constructor(props: NavbarProps) {\n        super(props);\n        this.toggleDrawer = this.toggleDrawer.bind(this);\n    }\n\n    private toggleDrawer(): void {\n        this.setState({ drawerOpen: !this.state.drawerOpen });\n    }\n\n    public render(): JSX.Element {\n        const elevation: number = this.props.transparent ? 0 : 3;\n        const backgroundColor: 'primary' | 'transparent' = this.props.transparent ? 'transparent' : 'primary';\n        const textColor: string = 'white';\n        const containedBackgroundColor: string = this.props.transparent ? 'primary' : 'white';\n        const containedTextColor: string = this.props.transparent ? 'primary.contrastText' : '#086788';\n\n        return (\n            <>\n                <AppBar position=\"fixed\" color={backgroundColor} elevation={elevation} sx={{ paddingY: 2, transition: '0.1s' }}>\n                    <Container>\n                        <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n                            <Typography variant=\"h6\" color=\"white\">\n                                \n                            </Typography>\n\n                            <Stack direction=\"row\" spacing={3} sx={{ display: { xs: 'none', md: 'block' }}}>\n                                {\n                                    this.props.tabs.map((tab: Tab): JSX.Element => (\n                                        <TabButton link={tab.link} color={textColor}>{tab.title}</TabButton>\n                                    ))\n                                }\n                                \n                                <PopoverTab backgroundColor={containedBackgroundColor} color={containedTextColor}>\n                                    Contact Us\n                                </PopoverTab>\n                            </Stack>\n\n                            <Stack direction=\"row\" spacing={3} sx={{ display: { xs: 'block', md: 'none' }}}>\n                                <IconButton onClick={this.toggleDrawer}>\n                                    <MenuIcon sx={{ color: 'white' }} />\n                                </IconButton>\n                            </Stack>\n                        </Stack>\n                    </Container>\n                </AppBar>\n\n                <Drawer anchor=\"right\" open={this.state.drawerOpen} onClose={this.toggleDrawer} sx={{\n                    width: DRAWER_WIDTH,\n                    flexShrink: 0,\n                    '& .MuiDrawer-paper': {\n                        width: DRAWER_WIDTH,\n                        boxSizing: 'border-box',\n                    },\n                }}>\n                    <DrawerHeader>\n                        <IconButton onClick={this.toggleDrawer}>\n                            <KeyboardArrowRightIcon />\n                        </IconButton>\n                    </DrawerHeader>\n\n                    <Divider />\n\n                    <List disablePadding>\n                        {this.props.tabs.map((tab: Tab, index: number): JSX.Element => (\n                            <ListItem key={tab.title} disablePadding>\n                                <ListItemButton>\n                                    <ListItemIcon>\n                                        {index % 2 === 0 ? <MoneyOffIcon /> : <HandymanIcon />}\n                                    </ListItemIcon>\n                                    \n                                    <ListItemText primary={tab.title} />\n                                </ListItemButton>\n                            </ListItem>\n                        ))}\n                    </List>\n                </Drawer>\n            </>\n        );\n    }\n}","/Users/dexterdavenport/Desktop/websites/sorensen/src/components/Footer.tsx",[],[],"/Users/dexterdavenport/Desktop/websites/sorensen/src/components/home/Header.tsx",[],[],"/Users/dexterdavenport/Desktop/websites/sorensen/src/components/home/About.tsx",[],[],"/Users/dexterdavenport/Desktop/websites/sorensen/src/components/home/Title.tsx",[],[],"/Users/dexterdavenport/Desktop/websites/sorensen/src/components/home/Practices.tsx",[],[],"/Users/dexterdavenport/Desktop/websites/sorensen/src/components/context/DarkMode.tsx",[],[],{"ruleId":"63","severity":1,"message":"64","line":77,"column":20,"nodeType":"65","messageId":"66","endLine":77,"endColumn":31},{"ruleId":"63","severity":1,"message":"67","line":13,"column":8,"nodeType":"65","messageId":"66","endLine":13,"endColumn":24},{"ruleId":"63","severity":1,"message":"68","line":14,"column":8,"nodeType":"65","messageId":"66","endLine":14,"endColumn":14},{"ruleId":"63","severity":1,"message":"69","line":25,"column":11,"nodeType":"65","messageId":"66","endLine":25,"endColumn":23},{"ruleId":"63","severity":1,"message":"70","line":13,"column":8,"nodeType":"65","messageId":"66","endLine":13,"endColumn":17},{"ruleId":"63","severity":1,"message":"71","line":14,"column":8,"nodeType":"65","messageId":"66","endLine":14,"endColumn":17},{"ruleId":"63","severity":1,"message":"72","line":15,"column":8,"nodeType":"65","messageId":"66","endLine":15,"endColumn":15},{"ruleId":"63","severity":1,"message":"73","line":20,"column":8,"nodeType":"65","messageId":"66","endLine":20,"endColumn":16},"@typescript-eslint/no-unused-vars","'setDarkMode' is assigned a value but never used.","Identifier","unusedVar","'FormControlLabel' is defined but never used.","'Switch' is defined but never used.","'handleChange' is assigned a value but never used.","'PhoneIcon' is defined but never used.","'EmailIcon' is defined but never used.","'MapIcon' is defined but never used.","'InfoIcon' is defined but never used."]